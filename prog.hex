
// sample picoMIPS program 2 
// n = 8 bits, Isize = 16+n = 24 bits
// format: 6b opcode, 5b %d, 5b %s, 8b immediate or address
// 
// HEX /////////// BINARY  ///////////////////// ASSEMBLER ////adr1////addr2////addr3////Value_pm////Meaning
000000    // 24'b0000_0000_0000_0000_0000_0000  	Store		%0		%0		%0
700000    // 24'b0111_0000_0000_0000_0000_0000   	SW80 
210000    // 24'b0010_0001_0000_0000_0000_0000    	INSW 		%1, 	%0;		%0 	  				input x1
700000    // 24'b0111_0000_0000_0000_0000_0000    	SW80 
220000    // 24'b0010_0010_0000_0000_0000_0000   	INSW 		%2, 	%0;		%0 	  				input y1
700000    // 24'b0111_0000_0000_0000_0000_0000    	SW80 
//////////////////////////////////////////////////////////////////////////////////////////////
130060    // 24'b0001_0011_0000_0000_0110_0000    	INPM  		%3, 	 0;  			0.75 		Load in 0.75 01100000
033000    // 24'b0000_0011_0011_0000_0000_0000   	Store		%3		%3		%0
543100    // 24'b0101_0100_0011_0001_0000_0000   	MUL  		%4, 	%3;		%1 	  				Mult 
044000    // 24'b0000_0100_0100_0000_0000_0000  	Store		%4		%4		%0
//////////
150040    // 24'b0001_0101_0000_0000_0100_0000   	INPM  		%5, 	 0;  			0.5  		Load in 0.5  11000000
055000    // 24'b0000_0101_0101_0000_0000_0000  	Store		%5		%5		%0
565200    // 24'b0101_0110_0101_0010_0000_0000   	MUL			%6,		%5;		%2		  			Mult 
066000    // 24'b0000_0110_0110_0000_0000_0000  	Store		%6		%6		%0
//////
376400    // 24'b0011_0111_0110_0100_0000_0000    	ADD			%7,		%6;		%4		  			Add  store in %3
077000    // 24'b0000_0111_0111_0000_0000_0000  	Store		%7		%7		%0
///////////////////////////////////////////////////////////////////////////////////////////////
1500C0    // 24'b0001_0101_0000_0000_1100_0000    	INPM  		%5, 	 0;  	%0		-0.5 		Load in -0.5 11000000
055000    // 24'b0000_0101_0101_0000_0000_0000  	Store		%5		%5		%0
585100    // 24'b0101_1000_0101_0001_0000_0000    	MUL  		%8, 	%5;		%1 	  				Mult 
088000    // 24'b0000_1000_1000_0000_0000_0000  	Store		%8		%8		%0
//////
593200    // 24'b0101_1001_0011_0010_0000_0000    	MUL			%9,		%3;		%2		  			Mult 
099000    // 24'b0000_1001_1001_0000_0000_0000  	Store		%9		%9		%0
//////
3A9800    // 24'b0011_1010_1001_1000_0000_0000    	ADD			%10,	%9;		%8		  			Add  store in %3
0AA000    // 24'b0000_1010_1010_0000_0000_0000  	Store		%10		%10		%0
///////////////////////////////////////////////////////////////////////////////////////////////					 	  					
4B7014    // 24'b0100_1011_0111_0000_0001_0100  	ADDI  		%11, 	%7;		%0   	20  		Add store in %3
0BB000    // 24'b0000_1011_1011_0000_0000_0000  	Store		%11		%11		%0
0BB000    // 24'b0000_1011_1011_0000_0000_0000  	Store		%11		%11		%0
80B000    // 24'b1000_0000_1011_0000_0000_0000  	SW81  				%11	   	  
4CA0EC    // 24'b0100_1100_1010_0000_1110_1100   	ADDI  		%12, 	%10;	%0		20  		Add store in %5
0CC000    // 24'b0000_1100_1100_0000_0000_0000  	Store		%12		%12		%0
70C000    // 24'b0111_0000_1100_0000_0000_0000  	SW80  				%12
0CC000    // 24'b0000_1100_1100_0000_0000_0000  	Store		%12		%12		%0